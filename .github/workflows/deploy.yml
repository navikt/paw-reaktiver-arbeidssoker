name: Build, push, and deploy

on:
    push:
        branches:
            - main
            - dev/*

env:
    IMAGE_BASE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}

jobs:
    set-vars:
        name: Setter vars
        runs-on: ubuntu-latest
        outputs:
            tag: ${{ steps.tag.outputs.tag }}
            image: ${{ env.IMAGE_BASE }}:${{ steps.tag.outputs.tag }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Lag tag for image
              id: tag
              run: echo "tag=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> ${GITHUB_OUTPUT}

    test-build-and-push:
        name: Test, build and push
        needs: set-vars
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build app and publish Docker image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  tags: |
                      ${{ env.IMAGE_BASE }}:latest
                      ${{ needs.set-vars.outputs.image }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy-dev:
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
        name: Deploy til dev
        needs: [set-vars, test-build-and-push]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Deploy
              uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-gcp
                  IMAGE: ${{ needs.set-vars.outputs.image }}
                  RESOURCE: nais/dev-gcp/nais.yaml

    # deploy-prod:
    #     if: github.ref == 'refs/heads/main'
    #     name: Deploy til prod
    #     needs: [set-vars, deploy-dev]
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v3

    #         - name: Deploy
    #           uses: nais/deploy/actions/deploy@v1
    #           env:
    #               APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
    #               CLUSTER: prod-gcp
    #               RESOURCE: nais/prod-gcp/nais.yaml
    #               IMAGE: ${{ needs.set-vars.outputs.image }}
    #               DRY_RUN: false
